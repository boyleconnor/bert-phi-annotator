# coding: utf-8

from __future__ import absolute_import
from typing import List  # noqa: F401
from openapi_server.models.base_model_ import Model
from openapi_server.models.text_date_annotation import TextDateAnnotation
from openapi_server import util


class TextDateAnnotationResponse(Model):
    """NOTE: This class is auto generated by
    OpenAPI Generator (https://openapi-generator.tech).
    Do not edit the class manually.
    """

    def __init__(self, text_date_annotations=None):  # noqa: E501
        """TextDateAnnotationResponse - a model defined in OpenAPI

        :param text_date_annotations: The text_date_annotations of this TextDateAnnotationResponse.  # noqa: E501
        :type text_date_annotations: List[TextDateAnnotation]
        """
        self.openapi_types = {
            'text_date_annotations': List[TextDateAnnotation]
        }

        self.attribute_map = {
            'text_date_annotations': 'textDateAnnotations'
        }

        self._text_date_annotations = text_date_annotations

    @classmethod
    def from_dict(cls, dikt) -> 'TextDateAnnotationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TextDateAnnotationResponse of this TextDateAnnotationResponse.  # noqa: E501
        :rtype: TextDateAnnotationResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def text_date_annotations(self):
        """Gets the text_date_annotations of this TextDateAnnotationResponse.

        A list of date annotations  # noqa: E501

        :return: The text_date_annotations of this TextDateAnnotationResponse.
        :rtype: List[TextDateAnnotation]
        """
        return self._text_date_annotations

    @text_date_annotations.setter
    def text_date_annotations(self, text_date_annotations):
        """Sets the text_date_annotations of this TextDateAnnotationResponse.

        A list of date annotations  # noqa: E501

        :param text_date_annotations: The text_date_annotations of this TextDateAnnotationResponse.
        :type text_date_annotations: List[TextDateAnnotation]
        """
        if text_date_annotations is None:
            raise ValueError("Invalid value for `text_date_annotations`, must not be `None`")  # noqa: E501

        self._text_date_annotations = text_date_annotations
